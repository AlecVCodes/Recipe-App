{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alect\\\\Contacts\\\\Desktop\\\\recipe-app\\\\frontend\\\\src\\\\pages\\\\IndividualRecipe.tsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IndividualRecipe() {\n  _s();\n  const {\n    user\n  } = UseAuthContext();\n  const {\n    id\n  } = useParams(); // Make the 'id' parameter optional\n  const [recipe, setRecipe] = useState(null);\n\n  // Check local storage for the recipe data on component mount\n  useEffect(() => {\n    const storedRecipe = localStorage.getItem(`recipe_${id}`);\n    if (storedRecipe) {\n      // Parse the stored recipe data\n      const parsedRecipe = JSON.parse(storedRecipe);\n      setRecipe(parsedRecipe);\n    } else {\n      // If not found in local storage, fetch the recipe data\n      fetchRecipeData();\n    }\n  }, [id]);\n  const fetchRecipeData = async () => {\n    if (id) {\n      try {\n        const response = await fetch(`/api/recipes/${id}`, {\n          headers: {\n            Authorization: `Bearer ${user.token}`\n          }\n        }); // Adjust the API endpoint to match your backend\n        if (response.ok) {\n          const data = await response.json();\n          setRecipe(data);\n          console.log(data);\n          // Store the fetched recipe data in local storage\n          localStorage.setItem(`recipe_${id}`, JSON.stringify(data));\n        } else {\n          // Handle error when the recipe is not found\n        }\n      } catch (error) {\n        // Handle any fetch errors\n      }\n    }\n  };\n  if (!recipe) {\n    // Render a loading indicator or an error message here\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"recipe-title\",\n        children: recipe.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-image\",\n        style: {\n          backgroundImage: `url(${recipe.img})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: recipe.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [ingredient.name, \": \", ingredient.quantity, \" \", ingredient.unit]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(IndividualRecipe, \"mspyGayhjAFc7aood8Dr22WglZg=\", true);\n_c = IndividualRecipe;\nexport default IndividualRecipe;\nvar _c;\n$RefreshReg$(_c, \"IndividualRecipe\");","map":{"version":3,"names":["IndividualRecipe","_s","user","UseAuthContext","id","useParams","recipe","setRecipe","useState","useEffect","storedRecipe","localStorage","getItem","parsedRecipe","JSON","parse","fetchRecipeData","response","fetch","headers","Authorization","token","ok","data","json","console","log","setItem","stringify","error","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","style","backgroundImage","img","ingredients","map","ingredient","index","name","quantity","unit","_c","$RefreshReg$"],"sources":["C:/Users/alect/Contacts/Desktop/recipe-app/frontend/src/pages/IndividualRecipe.tsx"],"sourcesContent":["function IndividualRecipe() {\r\n  const { user } = UseAuthContext();\r\n  const { id } = useParams<{ id?: string }>(); // Make the 'id' parameter optional\r\n  const [recipe, setRecipe] = useState<Recipe | null>(null);\r\n\r\n  // Check local storage for the recipe data on component mount\r\n  useEffect(() => {\r\n    const storedRecipe = localStorage.getItem(`recipe_${id}`);\r\n    if (storedRecipe) {\r\n      // Parse the stored recipe data\r\n      const parsedRecipe = JSON.parse(storedRecipe);\r\n      setRecipe(parsedRecipe);\r\n    } else {\r\n      // If not found in local storage, fetch the recipe data\r\n      fetchRecipeData();\r\n    }\r\n  }, [id]);\r\n\r\n  const fetchRecipeData = async () => {\r\n    if (id) {\r\n      try {\r\n        const response = await fetch(`/api/recipes/${id}`, {\r\n          headers: { Authorization: `Bearer ${user.token}` }\r\n        }); // Adjust the API endpoint to match your backend\r\n        if (response.ok) {\r\n          const data: Recipe = await response.json();\r\n          setRecipe(data);\r\n          console.log(data);\r\n          // Store the fetched recipe data in local storage\r\n          localStorage.setItem(`recipe_${id}`, JSON.stringify(data));\r\n        } else {\r\n          // Handle error when the recipe is not found\r\n        }\r\n      } catch (error) {\r\n        // Handle any fetch errors\r\n      }\r\n    }\r\n  };\r\n\r\n  if (!recipe) {\r\n    // Render a loading indicator or an error message here\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"recipe-header\">\r\n        <h1 className=\"recipe-title\">{recipe.title}</h1>\r\n        <div\r\n          className=\"recipe-image\"\r\n          style={{ backgroundImage: `url(${recipe.img})` }}\r\n        ></div>\r\n      </div>\r\n\r\n      <ul>\r\n        {recipe.ingredients.map((ingredient, index) => (\r\n          <li key={index}>\r\n            {ingredient.name}: {ingredient.quantity} {ingredient.unit}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IndividualRecipe;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}