{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alect\\\\Contacts\\\\Desktop\\\\recipe-app\\\\src\\\\components\\\\slider.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Flicking from \"@egjs/react-flicking\";\nimport \"@egjs/react-flicking/dist/flicking.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Slider() {\n  _s();\n  const flickingRef = useRef(null);\n  const [panelsPerView, setPanelsPerView] = useState(3);\n  useEffect(() => {\n    const checkScreenSize = () => {\n      if (window.innerWidth <= 768) {\n        // Adjust the number of panels per view for smaller screens\n        setPanelsPerView(2);\n      } else {\n        // Use the default number of panels per view for larger screens\n        setPanelsPerView(3);\n      }\n    };\n\n    // Initial check when the component mounts\n    checkScreenSize();\n\n    // Listen for window resize events and update panelsPerView accordingly\n    window.addEventListener(\"resize\", checkScreenSize);\n\n    // Clean up the event listener when the component unmounts  \n    return () => {\n      window.removeEventListener(\"resize\", checkScreenSize);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slider\",\n    children: /*#__PURE__*/_jsxDEV(Flicking, {\n      ref: flickingRef,\n      className: \"flicking-viewport\",\n      align: \"prev\",\n      panelsPerView: panelsPerView,\n      circular: false,\n      onMoveEnd: e => {\n        console.log(e);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u201CFlavourFinder ignited my culinary journey! Learning to cook online is a flavourful adventure.\\u201D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\\"FlavourFinder made me a kitchen pro. Their online cooking platform is practical and empowering!\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u201CFlavourFinder honed my kitchen techniques. Their digital cooking platform is efficient and engaging!\\u201D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Slider, \"GtwTegjpZjBlc2wWo5e9nVS8PaA=\");\n_c = Slider;\nexport default Slider;\nvar _c;\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Flicking","jsxDEV","_jsxDEV","Slider","_s","flickingRef","panelsPerView","setPanelsPerView","checkScreenSize","window","innerWidth","addEventListener","removeEventListener","className","children","ref","align","circular","onMoveEnd","e","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/alect/Contacts/Desktop/recipe-app/src/components/slider.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport Flicking from \"@egjs/react-flicking\";\r\nimport \"@egjs/react-flicking/dist/flicking.css\";\r\n\r\nfunction Slider() {\r\n  const flickingRef = useRef<Flicking | null>(null);\r\n  const [panelsPerView, setPanelsPerView] = useState(3);\r\n\r\n  useEffect(() => {\r\n    const checkScreenSize = () => {\r\n      if (window.innerWidth <= 768) {\r\n        // Adjust the number of panels per view for smaller screens\r\n        setPanelsPerView(2);\r\n      } else {\r\n        // Use the default number of panels per view for larger screens\r\n        setPanelsPerView(3);\r\n      }\r\n    };\r\n\r\n    // Initial check when the component mounts\r\n    checkScreenSize();\r\n\r\n    // Listen for window resize events and update panelsPerView accordingly\r\n    window.addEventListener(\"resize\", checkScreenSize);\r\n\r\n    // Clean up the event listener when the component unmounts  \r\n    return () => {\r\n      window.removeEventListener(\"resize\", checkScreenSize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"slider\">\r\n      <Flicking\r\n        ref={flickingRef}\r\n        className=\"flicking-viewport\"\r\n        align=\"prev\"\r\n        panelsPerView={panelsPerView}\r\n        circular={false}\r\n        onMoveEnd={(e) => {\r\n          console.log(e);\r\n        }}\r\n      >\r\n        <div className=\"panel\">\r\n          <p>\r\n            “FlavourFinder ignited my culinary journey! Learning to cook online\r\n            is a flavourful adventure.”\r\n          </p>\r\n        </div>\r\n        <div className=\"panel\">\r\n          <p>\r\n            \"FlavourFinder made me a kitchen pro. Their online cooking platform\r\n            is practical and empowering!\"\r\n          </p>\r\n        </div>\r\n        <div className=\"panel\">\r\n          <p>\r\n            “FlavourFinder honed my kitchen techniques. Their digital cooking\r\n            platform is efficient and engaging!”\r\n          </p>\r\n        </div>\r\n      </Flicking>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Slider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAO,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,WAAW,GAAGP,MAAM,CAAkB,IAAI,CAAC;EACjD,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAErDF,SAAS,CAAC,MAAM;IACd,MAAMW,eAAe,GAAGA,CAAA,KAAM;MAC5B,IAAIC,MAAM,CAACC,UAAU,IAAI,GAAG,EAAE;QAC5B;QACAH,gBAAgB,CAAC,CAAC,CAAC;MACrB,CAAC,MAAM;QACL;QACAA,gBAAgB,CAAC,CAAC,CAAC;MACrB;IACF,CAAC;;IAED;IACAC,eAAe,CAAC,CAAC;;IAEjB;IACAC,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,eAAe,CAAC;;IAElD;IACA,OAAO,MAAM;MACXC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,eAAe,CAAC;IACvD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAKW,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACrBZ,OAAA,CAACF,QAAQ;MACPe,GAAG,EAAEV,WAAY;MACjBQ,SAAS,EAAC,mBAAmB;MAC7BG,KAAK,EAAC,MAAM;MACZV,aAAa,EAAEA,aAAc;MAC7BW,QAAQ,EAAE,KAAM;MAChBC,SAAS,EAAGC,CAAC,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MAChB,CAAE;MAAAL,QAAA,gBAEFZ,OAAA;QAAKW,SAAS,EAAC,OAAO;QAAAC,QAAA,eACpBZ,OAAA;UAAAY,QAAA,EAAG;QAGH;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNvB,OAAA;QAAKW,SAAS,EAAC,OAAO;QAAAC,QAAA,eACpBZ,OAAA;UAAAY,QAAA,EAAG;QAGH;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNvB,OAAA;QAAKW,SAAS,EAAC,OAAO;QAAAC,QAAA,eACpBZ,OAAA;UAAAY,QAAA,EAAG;QAGH;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV;AAACrB,EAAA,CA5DQD,MAAM;AAAAuB,EAAA,GAANvB,MAAM;AA8Df,eAAeA,MAAM;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}