{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alect\\\\Contacts\\\\Desktop\\\\recipe-app\\\\frontend\\\\src\\\\components\\\\HomeRecipes.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { UseAuthContext } from \"../hooks/useAuthContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport LoaderComponent from \"./loaderComponent\";\nimport RecipeFilterComponent from \"./RecipeFilterComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction HomeRecipes() {\n  _s();\n  // Add isLoading state\n  const [isLoading, setIsLoading] = useState(true);\n\n  // States\n  const [recipes, setRecipes] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const timeoutRef = useRef(null);\n\n  // Filtered recipes\n  const [filteredRecipes, setFilteredRecipes] = useState(null);\n\n  // State to store background colors for filtered recipes\n  const [filteredRecipeColors, setFilteredRecipeColors] = useState([]);\n\n  // Contexts\n  const {\n    user\n  } = UseAuthContext();\n\n  // Navigate\n  const Navigate = useNavigate();\n  useEffect(() => {\n    const fetchRecipes = async () => {\n      try {\n        const response = await fetch(\"/api/recipes\", {\n          headers: {\n            Authorization: `Bearer ${user.token}`\n          }\n        });\n        if (!response.ok) {\n          console.error(`Failed to fetch recipes. Status: ${response.status}`);\n          return;\n        }\n        const json = await response.json();\n        setRecipes(json);\n\n        // Set isLoading to false after data is loaded\n        setIsLoading(false);\n\n        // Set filteredRecipes to all recipes by default\n        setFilteredRecipes(json);\n      } catch (error) {\n        console.error(\"Error during fetch:\", error);\n\n        // Set isLoading to false in case of an error\n        setIsLoading(false);\n      }\n      console.log(recipes);\n    };\n    if (user) {\n      fetchRecipes();\n    }\n  }, [user]);\n  useEffect(() => {\n    // Clear the timeout if a new error message is set\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    // Set a new timeout to reset the error message after 800 milliseconds\n    if (error !== \"\") {\n      timeoutRef.current = window.setTimeout(() => {\n        setError(\"\");\n      }, 800);\n    }\n  }, [error]);\n  const saveUserRecipes = async recipeId => {\n    try {\n      const response = await fetch(`/api/recipes/${recipeId}`, {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      });\n      if (!response.ok) {\n        console.error(`Failed to fetch recipe with ID ${recipeId}. Status: ${response.status}`);\n        return;\n      }\n      const savedRecipe = await response.json();\n      const postResponse = await fetch(\"/api/userRecipes\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`\n        },\n        body: JSON.stringify(savedRecipe)\n      });\n      if (!postResponse.ok) {\n        setError(\"Recipe already saved\");\n        console.error(\"Failed to post recipe to UserRecipes schema.\");\n      } else {\n        setSuccess(\"Recipe saved successfully\");\n\n        // Reset success message after 800 milliseconds (0.8 seconds)\n        timeoutRef.current = window.setTimeout(() => {\n          setSuccess(\"\");\n          setError(\"\");\n        }, 800);\n      }\n    } catch (error) {\n      console.error(\"Error during fetch:\", error);\n    }\n  };\n  const handleRecipeClick = recipe => {\n    // Get recipe id\n    const id = recipe._id;\n    // Navigate to that page based on the id of the recipe\n    Navigate(`/individual-recipe/${id}`);\n  };\n\n  // Generate a random background color\n  const getRandomColor = () => {\n    const letters = \"0123456789ABCDEF\";\n    let color = \"#\";\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  };\n\n  // Update filtered recipe colors when filteredRecipes change\n  useEffect(() => {\n    if (filteredRecipes) {\n      const colors = filteredRecipes.map(() => getRandomColor());\n      setFilteredRecipeColors(colors);\n    }\n  }, [filteredRecipes]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(LoaderComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(RecipeFilterComponent, {\n        filteredRecipes: filteredRecipes,\n        setFilteredRecipes: setFilteredRecipes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipes\",\n        children: filteredRecipes && filteredRecipes.length > 0 && filteredRecipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-card\",\n          style: {\n            backgroundColor: filteredRecipeColors[index]\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            onClick: () => handleRecipeClick(recipe),\n            src: recipe.img,\n            alt: \"food-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text display-f\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: recipe.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"recipe-card-btn-save\",\n              onClick: () => saveUserRecipes(recipe._id),\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"20\",\n                height: \"23\",\n                viewBox: \"0 0 17 17\",\n                fill: \"none\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M17 9.71429H9.71429V17H7.28571V9.71429H0V7.28572H7.28571V0H9.71429V7.28572H17V9.71429Z\",\n                  fill: \"#66C67B\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 23\n              }, this), \"Save\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 19\n          }, this)]\n        }, recipe._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: error !== \"\" ? \"error-message\" : \"\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: success !== \"\" ? \"success-message\" : \"\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(HomeRecipes, \"3mF3LIiaOgi1xvyvt2Khklez+/Q=\", false, function () {\n  return [useNavigate];\n});\n_c = HomeRecipes;\nexport default HomeRecipes;\nvar _c;\n$RefreshReg$(_c, \"HomeRecipes\");","map":{"version":3,"names":["React","useState","useEffect","useRef","UseAuthContext","useNavigate","LoaderComponent","RecipeFilterComponent","jsxDEV","_jsxDEV","Fragment","_Fragment","HomeRecipes","_s","isLoading","setIsLoading","recipes","setRecipes","error","setError","success","setSuccess","timeoutRef","filteredRecipes","setFilteredRecipes","filteredRecipeColors","setFilteredRecipeColors","user","Navigate","fetchRecipes","response","fetch","headers","Authorization","token","ok","console","status","json","log","current","clearTimeout","window","setTimeout","saveUserRecipes","recipeId","savedRecipe","postResponse","method","body","JSON","stringify","handleRecipeClick","recipe","id","_id","getRandomColor","letters","color","i","Math","floor","random","colors","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","index","style","backgroundColor","onClick","src","img","alt","title","width","height","viewBox","fill","xmlns","d","_c","$RefreshReg$"],"sources":["C:/Users/alect/Contacts/Desktop/recipe-app/frontend/src/components/HomeRecipes.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { UseAuthContext } from \"../hooks/useAuthContext\";\r\nimport { useAsyncError, useNavigate } from \"react-router-dom\";\r\nimport LoaderComponent from \"./loaderComponent\";\r\nimport RecipeFilterComponent from \"./RecipeFilterComponent\";\r\n\r\nexport interface Ingredient {\r\n  name: string;\r\n  quantity: number;\r\n  unit: string;\r\n}\r\n\r\nexport interface Recipe {\r\n  img: string;\r\n  _id: string;\r\n  title: string;\r\n  ingredients: Ingredient[];\r\n}\r\n\r\nfunction HomeRecipes() {\r\n  // Add isLoading state\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // States\r\n  const [recipes, setRecipes] = useState<Recipe[] | null>(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const timeoutRef = useRef<number | null>(null);\r\n\r\n  // Filtered recipes\r\n  const [filteredRecipes, setFilteredRecipes] = useState<Recipe[] | null>(null);\r\n\r\n  // State to store background colors for filtered recipes\r\n  const [filteredRecipeColors, setFilteredRecipeColors] = useState<string[]>([]);\r\n\r\n  // Contexts\r\n  const { user } = UseAuthContext();\r\n\r\n  // Navigate\r\n  const Navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchRecipes = async () => {\r\n      try {\r\n        const response = await fetch(\"/api/recipes\", {\r\n          headers: { Authorization: `Bearer ${user.token}` }\r\n        });\r\n        if (!response.ok) {\r\n          console.error(`Failed to fetch recipes. Status: ${response.status}`);\r\n          return;\r\n        }\r\n        const json = await response.json();\r\n        setRecipes(json);\r\n\r\n        // Set isLoading to false after data is loaded\r\n        setIsLoading(false);\r\n\r\n        // Set filteredRecipes to all recipes by default\r\n        setFilteredRecipes(json);\r\n      } catch (error) {\r\n        console.error(\"Error during fetch:\", error);\r\n\r\n        // Set isLoading to false in case of an error\r\n        setIsLoading(false);\r\n      }\r\n      console.log(recipes);\r\n    };\r\n    if (user) {\r\n      fetchRecipes();\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    // Clear the timeout if a new error message is set\r\n    if (timeoutRef.current) {\r\n      clearTimeout(timeoutRef.current);\r\n    }\r\n\r\n    // Set a new timeout to reset the error message after 800 milliseconds\r\n    if (error !== \"\") {\r\n      timeoutRef.current = window.setTimeout(() => {\r\n        setError(\"\");\r\n      }, 800);\r\n    }\r\n  }, [error]);\r\n\r\n  const saveUserRecipes = async (recipeId: string) => {\r\n    try {\r\n      const response = await fetch(`/api/recipes/${recipeId}`, {\r\n        headers: { Authorization: `Bearer ${user.token}` },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        console.error(\r\n          `Failed to fetch recipe with ID ${recipeId}. Status: ${response.status}`\r\n        );\r\n        return;\r\n      }\r\n      const savedRecipe = await response.json();\r\n\r\n      const postResponse = await fetch(\"/api/userRecipes\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n        body: JSON.stringify(savedRecipe),\r\n      });\r\n\r\n      if (!postResponse.ok) {\r\n        setError(\"Recipe already saved\");\r\n        console.error(\"Failed to post recipe to UserRecipes schema.\");\r\n      } else {\r\n        setSuccess(\"Recipe saved successfully\");\r\n\r\n        // Reset success message after 800 milliseconds (0.8 seconds)\r\n        timeoutRef.current = window.setTimeout(() => {\r\n          setSuccess(\"\");\r\n          setError(\"\");\r\n        }, 800);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during fetch:\", error);\r\n    }\r\n  };\r\n\r\n  const handleRecipeClick = (recipe: Recipe) => {\r\n    // Get recipe id\r\n    const id = recipe._id;\r\n    // Navigate to that page based on the id of the recipe\r\n    Navigate(`/individual-recipe/${id}`);\r\n  };\r\n\r\n  // Generate a random background color\r\n  const getRandomColor = () => {\r\n    const letters = \"0123456789ABCDEF\";\r\n    let color = \"#\";\r\n    for (let i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  };\r\n\r\n  // Update filtered recipe colors when filteredRecipes change\r\n  useEffect(() => {\r\n    if (filteredRecipes) {\r\n      const colors = filteredRecipes.map(() => getRandomColor());\r\n      setFilteredRecipeColors(colors);\r\n    }\r\n  }, [filteredRecipes]);\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <LoaderComponent />\r\n      ) : (\r\n        <div className=\"dashboard-container\">\r\n          <RecipeFilterComponent\r\n            filteredRecipes={filteredRecipes}\r\n            setFilteredRecipes={setFilteredRecipes}\r\n          />\r\n          <div className=\"recipes\">\r\n            {filteredRecipes &&\r\n              filteredRecipes.length > 0 &&\r\n              filteredRecipes.map((recipe, index) => (\r\n                <div\r\n                  className=\"recipe-card\"\r\n                  key={recipe._id}\r\n                  style={{ backgroundColor: filteredRecipeColors[index] }}\r\n                >\r\n                  <img\r\n                    onClick={() => handleRecipeClick(recipe)}\r\n                    src={recipe.img}\r\n                    alt=\"food-img\"\r\n                  />\r\n                  <div className=\"text display-f\">\r\n                    <p>{recipe.title}</p>\r\n                    <button\r\n                      className=\"recipe-card-btn-save\"\r\n                      onClick={() => saveUserRecipes(recipe._id)}\r\n                    >\r\n                      <svg\r\n                        width=\"20\"\r\n                        height=\"23\"\r\n                        viewBox=\"0 0 17 17\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M17 9.71429H9.71429V17H7.28571V9.71429H0V7.28572H7.28571V0H9.71429V7.28572H17V9.71429Z\"\r\n                          fill=\"#66C67B\"\r\n                        />\r\n                      </svg>\r\n                      Save\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n      <span className={error !== \"\" ? \"error-message\" : \"\"}>{error}</span>\r\n      <span className={success !== \"\" ? \"success-message\" : \"\"}>{success}</span>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HomeRecipes;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}