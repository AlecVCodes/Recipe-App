{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alect\\\\Contacts\\\\Desktop\\\\recipe-app\\\\src\\\\svg\\\\Chevron.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//chevron states\n\nconst [showChevron, setShowChevron] = uest;\nwindow.addEventListener(\"resize\", () => {\n  if (window.innerWidth > 1000) {\n    // Your logic when the window width is above 1000px\n    console.log(\"Window width is above 1000px\");\n  } else {\n    // Your logic when the window width is 1000px or below\n    console.log(\"Window width is 1000px or below\");\n  }\n});\nfunction Chevron({\n  rotation,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    className: \"footer-chevron\",\n    width: \"20\",\n    height: \"20\",\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    style: {\n      transition: \"transform 0.3s\",\n      transform: `rotate(${rotation}deg)`,\n      cursor: \"pointer\"\n    },\n    onClick: onClick,\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M10 13.75L3.75 7.5L4.625 6.625L10 12L15.375 6.625L16.25 7.5L10 13.75Z\",\n      fill: \"#fff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = Chevron;\nexport default Chevron;\nvar _c;\n$RefreshReg$(_c, \"Chevron\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","showChevron","setShowChevron","uest","window","addEventListener","innerWidth","console","log","Chevron","rotation","onClick","className","width","height","viewBox","fill","xmlns","style","transition","transform","cursor","children","d","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/alect/Contacts/Desktop/recipe-app/src/svg/Chevron.tsx"],"sourcesContent":["import React from \"react\";\r\nimport useState from \"react\";\r\n\r\ninterface ChevronProps {\r\n  rotation: number;\r\n  onClick: () => void;\r\n}\r\n\r\n//chevron states\r\n\r\nconst [showChevron, setShowChevron] = uest\r\n\r\nwindow.addEventListener(\"resize\", () => {\r\n  if (window.innerWidth > 1000) {\r\n    // Your logic when the window width is above 1000px\r\n    console.log(\"Window width is above 1000px\");\r\n  } else {\r\n    // Your logic when the window width is 1000px or below\r\n    console.log(\"Window width is 1000px or below\");\r\n  }\r\n});\r\n\r\nfunction Chevron({ rotation, onClick }: ChevronProps) {\r\n  return (\r\n    <svg\r\n      className=\"footer-chevron\"\r\n      width=\"20\"\r\n      height=\"20\"\r\n      viewBox=\"0 0 20 20\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      style={{\r\n        transition: \"transform 0.3s\",\r\n        transform: `rotate(${rotation}deg)`,\r\n        cursor: \"pointer\",\r\n      }}\r\n      onClick={onClick}\r\n    >\r\n      <path\r\n        d=\"M10 13.75L3.75 7.5L4.625 6.625L10 12L15.375 6.625L16.25 7.5L10 13.75Z\"\r\n        fill=\"#fff\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default Chevron;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ1B;;AAEA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGC,IAAI;AAE1CC,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,MAAM;EACtC,IAAID,MAAM,CAACE,UAAU,GAAG,IAAI,EAAE;IAC5B;IACAC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;EAC7C,CAAC,MAAM;IACL;IACAD,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;EAChD;AACF,CAAC,CAAC;AAEF,SAASC,OAAOA,CAAC;EAAEC,QAAQ;EAAEC;AAAsB,CAAC,EAAE;EACpD,oBACEX,OAAA;IACEY,SAAS,EAAC,gBAAgB;IAC1BC,KAAK,EAAC,IAAI;IACVC,MAAM,EAAC,IAAI;IACXC,OAAO,EAAC,WAAW;IACnBC,IAAI,EAAC,MAAM;IACXC,KAAK,EAAC,4BAA4B;IAClCC,KAAK,EAAE;MACLC,UAAU,EAAE,gBAAgB;MAC5BC,SAAS,EAAG,UAASV,QAAS,MAAK;MACnCW,MAAM,EAAE;IACV,CAAE;IACFV,OAAO,EAAEA,OAAQ;IAAAW,QAAA,eAEjBtB,OAAA;MACEuB,CAAC,EAAC,uEAAuE;MACzEP,IAAI,EAAC;IAAM;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACC,EAAA,GAtBQnB,OAAO;AAwBhB,eAAeA,OAAO;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}