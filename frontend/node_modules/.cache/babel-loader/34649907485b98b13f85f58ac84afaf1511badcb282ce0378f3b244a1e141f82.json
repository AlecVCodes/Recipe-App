{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alect\\\\Contacts\\\\Desktop\\\\recipe-app\\\\frontend\\\\src\\\\pages\\\\dashboard\\\\SavedRecipesComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { UseSavedRecipesContext } from \"../../hooks/useSavedRecipes\";\n\n// Define the type for savedRecipe\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SavedRecipesComponent({\n  savedRecipe\n}) {\n  _s();\n  const {\n    dispatch\n  } = UseSavedRecipesContext();\n  useEffect(() => {\n    console.log(\"saved recipes rendered\");\n  }, []);\n  const [savedRecipes, setSavedRecipes] = useState(null);\n  useEffect(() => {\n    const fetchRecipes = async () => {\n      try {\n        const response = await fetch(\"/api/userRecipes\");\n        if (!response.ok) {\n          console.error(`Failed to fetch user saved recipes Status: ${response.status}`);\n          return;\n        }\n        const json = await response.json();\n        setSavedRecipes(json);\n        console.log(json, \"user Saved Recipes\");\n      } catch (error) {\n        console.error(\"Error during fetch:\", error);\n      }\n    };\n    fetchRecipes();\n  }, []);\n  const handleClick = async () => {\n    const response = await fetch(\"/api/userRecipes\" + savedRecipe._id, {\n      method: \"DELETE\"\n    });\n    const json = await response.json();\n    if (response.ok) {\n      dispatch({\n        type: \"DELETE_SAVED_RECIPE\",\n        payload: json\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: savedRecipes && savedRecipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: recipe.img,\n        alt: \"food-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: recipe.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        className: \"save-recipe-btn\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, recipe._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(SavedRecipesComponent, \"RbOC6cvdRUNZXbJtC6MM9KRfCq4=\");\n_c = SavedRecipesComponent;\nexport default SavedRecipesComponent;\nvar _c;\n$RefreshReg$(_c, \"SavedRecipesComponent\");","map":{"version":3,"names":["React","useEffect","useState","UseSavedRecipesContext","jsxDEV","_jsxDEV","SavedRecipesComponent","savedRecipe","_s","dispatch","console","log","savedRecipes","setSavedRecipes","fetchRecipes","response","fetch","ok","error","status","json","handleClick","_id","method","type","payload","children","map","recipe","src","img","alt","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","className","_c","$RefreshReg$"],"sources":["C:/Users/alect/Contacts/Desktop/recipe-app/frontend/src/pages/dashboard/SavedRecipesComponent.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Recipe as UserSavedRecipes } from \"../../components/HomeRecipes\";\r\nimport { UseSavedRecipesContext } from \"../../hooks/useSavedRecipes\";\r\n\r\n// Define the type for savedRecipe\r\ninterface SavedRecipeType {\r\n  _id: string;\r\n  img: string;\r\n  title: string;\r\n  // Add other properties according to your data structure\r\n}\r\n\r\ninterface SavedRecipesComponentProps {\r\n  savedRecipe: SavedRecipeType;\r\n}\r\n\r\nfunction SavedRecipesComponent({ savedRecipe }: SavedRecipesComponentProps) {\r\n  const { dispatch } = UseSavedRecipesContext();\r\n\r\n  useEffect(() => {\r\n    console.log(\"saved recipes rendered\");\r\n  }, []);\r\n\r\n  const [savedRecipes, setSavedRecipes] = useState<UserSavedRecipes[] | null>(\r\n    null\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchRecipes = async () => {\r\n      try {\r\n        const response = await fetch(\"/api/userRecipes\");\r\n        if (!response.ok) {\r\n          console.error(\r\n            `Failed to fetch user saved recipes Status: ${response.status}`\r\n          );\r\n          return;\r\n        }\r\n        const json = await response.json();\r\n        setSavedRecipes(json);\r\n        console.log(json, \"user Saved Recipes\");\r\n      } catch (error) {\r\n        console.error(\"Error during fetch:\", error);\r\n      }\r\n    };\r\n\r\n    fetchRecipes();\r\n  }, []);\r\n\r\n  const handleClick = async () => {\r\n    const response = await fetch(\"/api/userRecipes\" + savedRecipe._id, {\r\n      method: \"DELETE\",\r\n    });\r\n    const json = await response.json();\r\n\r\n    if (response.ok) {\r\n      dispatch({ type: \"DELETE_SAVED_RECIPE\", payload: json });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {savedRecipes &&\r\n        savedRecipes.map((recipe) => (\r\n          <div key={recipe._id}>\r\n            <img src={recipe.img} alt=\"food-img\"></img>\r\n            <p>{recipe.title}</p>\r\n            <button onClick={handleClick} className=\"save-recipe-btn\">\r\n              Delete\r\n            </button>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SavedRecipesComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,SAASC,sBAAsB,QAAQ,6BAA6B;;AAEpE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAYA,SAASC,qBAAqBA,CAAC;EAAEC;AAAwC,CAAC,EAAE;EAAAC,EAAA;EAC1E,MAAM;IAAEC;EAAS,CAAC,GAAGN,sBAAsB,CAAC,CAAC;EAE7CF,SAAS,CAAC,MAAM;IACdS,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAC9C,IACF,CAAC;EAEDD,SAAS,CAAC,MAAM;IACd,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,CAAC;QAChD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChBP,OAAO,CAACQ,KAAK,CACV,8CAA6CH,QAAQ,CAACI,MAAO,EAChE,CAAC;UACD;QACF;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCP,eAAe,CAACO,IAAI,CAAC;QACrBV,OAAO,CAACC,GAAG,CAACS,IAAI,EAAE,oBAAoB,CAAC;MACzC,CAAC,CAAC,OAAOF,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;IACF,CAAC;IAEDJ,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,GAAGT,WAAW,CAACe,GAAG,EAAE;MACjEC,MAAM,EAAE;IACV,CAAC,CAAC;IACF,MAAMH,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAI,CAAC,CAAC;IAElC,IAAIL,QAAQ,CAACE,EAAE,EAAE;MACfR,QAAQ,CAAC;QAAEe,IAAI,EAAE,qBAAqB;QAAEC,OAAO,EAAEL;MAAK,CAAC,CAAC;IAC1D;EACF,CAAC;EAED,oBACEf,OAAA;IAAAqB,QAAA,EACGd,YAAY,IACXA,YAAY,CAACe,GAAG,CAAEC,MAAM,iBACtBvB,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAKwB,GAAG,EAAED,MAAM,CAACE,GAAI;QAACC,GAAG,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC3C9B,OAAA;QAAAqB,QAAA,EAAIE,MAAM,CAACQ;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrB9B,OAAA;QAAQgC,OAAO,EAAEhB,WAAY;QAACiB,SAAS,EAAC,iBAAiB;QAAAZ,QAAA,EAAC;MAE1D;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GALDP,MAAM,CAACN,GAAG;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMf,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAAC3B,EAAA,CAzDQF,qBAAqB;AAAAiC,EAAA,GAArBjC,qBAAqB;AA2D9B,eAAeA,qBAAqB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}