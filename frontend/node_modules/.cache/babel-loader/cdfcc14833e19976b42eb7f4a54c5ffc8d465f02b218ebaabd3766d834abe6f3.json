{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alect\\\\Contacts\\\\Desktop\\\\recipe-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./index.css\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport NavbarComponent from \"./components/navbar\";\nimport HomePage from \"./pages/homePage\";\nimport SignUpComponent from \"./pages/SignUp\";\nimport UserDashboard from \"./pages/userDashboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState(null);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:300\");\n      const result = await response.json();\n      setMessage(result.message);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  useEffect(() => {\n    if (message) {\n      console.log(\"Message from the backend:\", message);\n    }\n  }, [message]);\n  const shouldShowNavbar = pathname => {\n    return pathname !== \"/signup\" && pathname !== \"/login\";\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [shouldShowNavbar(window.location.pathname) && /*#__PURE__*/_jsxDEV(NavbarComponent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(SignUpComponent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/userDashboard\",\n        element: /*#__PURE__*/_jsxDEV(UserDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XE/0xKcZHOegijhA+gfXqgXpO1g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Route","Routes","NavbarComponent","HomePage","SignUpComponent","UserDashboard","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","message","setMessage","fetchData","response","fetch","result","json","error","console","log","shouldShowNavbar","pathname","children","path","element","window","location","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/alect/Contacts/Desktop/recipe-app/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./index.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  Navigate,\n} from \"react-router-dom\";\nimport NavbarComponent from \"./components/navbar\";\nimport HomePage from \"./pages/homePage\";\nimport SignUpComponent from \"./pages/SignUp\";\nimport UserDashboard from \"./pages/userDashboard\";\n\nfunction App() {\n  const [message, setMessage] = useState<string | null>(null);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:300\");\n      const result = await response.json();\n      setMessage(result.message);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  useEffect(() => {\n    if (message) {\n      console.log(\"Message from the backend:\", message);\n    }\n  }, [message]);\n\n  const shouldShowNavbar = (pathname: string) => {\n    return pathname !== \"/signup\" && pathname !== \"/login\";\n  };\n\n  return (\n    <Router>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <>\n              {shouldShowNavbar(window.location.pathname) && (\n                <NavbarComponent />\n              )}\n              <HomePage />\n            </>\n          }\n        />\n        <Route path=\"/signup\" element={<SignUpComponent />} />\n        <Route path=\"/userDashboard\" element={<UserDashboard />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}