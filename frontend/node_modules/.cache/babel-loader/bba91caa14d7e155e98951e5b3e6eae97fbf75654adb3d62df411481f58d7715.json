{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alect\\\\Contacts\\\\Desktop\\\\recipe-app\\\\frontend\\\\src\\\\pages\\\\dashboard\\\\userDashboard.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport SideBarComponent from \"../../components/SideBarComponent\";\nimport RecipeSearchComponent from \"../../components/RecipeSearchComponent\";\nimport DefaultIcon from \"../../images/default-profile-pic.jpg\";\nimport ProfileEditor from \"../../components/ProfileEditor\";\nimport axios from \"axios\";\nimport { UseAuthContext } from \"../../hooks/useAuthContext\";\n//translation imports\nimport { useTranslation } from \"react-i18next\";\nimport { changeLanguage } from \"i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserDashboardHome() {\n  _s2();\n  var _s = $RefreshSig$();\n  //translation variable \n  const {\n    t,\n    i18n\n  } = useTranslation();\n  useEffect(() => {\n    const lng = navigator.language;\n    i18n.changeLanguage(lng);\n  }, []);\n  function LanguageSelector() {\n    _s();\n    const {\n      i18n\n    } = useTranslation();\n    const changeLanguage = lng => {\n      i18n.changeLanguage(lng);\n    };\n  }\n  _s(LanguageSelector, \"iD7vDB/EPQWin5ATG71yacngHuk=\", false, function () {\n    return [useTranslation];\n  });\n  const {\n    user\n  } = UseAuthContext();\n  const [showProfileEditor, setShowProfileEditor] = useState(false);\n  const [userSelectedImage, setUserSelectedImage] = useState('');\n  const [icon, setIcon] = useState(null);\n  const [imageUpload, setImageUpload] = useState({\n    image: null\n  }); // Initialize with image property\n\n  const handleImg = e => {\n    if (e.target.files && e.target.files[0]) {\n      setIcon(e.target.files[0]);\n    }\n  };\n  if (user) {\n    console.log(user, \"userr\");\n  }\n\n  //upload user image to cloudinary media gallery\n  const ProfileUpload = async file => {\n    const formData = new FormData();\n\n    //user file\n    formData.append('file', file);\n\n    //Where in cloudinary image will be stored\n    formData.append('upload_preset', 'RecipeAppUserPhotos');\n    try {\n      const response = await axios.post('https://api.cloudinary.com/v1_1/deewhii9n/image/upload', formData);\n      const imageUrl = response.data.secure_url;\n\n      // Handle imageUrl as needed, e.g., update userSelectedImage\n      setUserSelectedImage(imageUrl);\n\n      // Call the function to send the updated profile picture URL to the server\n      updateProfilePictureOnServer(imageUrl);\n      console.log(imageUrl);\n    } catch (error) {\n      console.error(error);\n      throw error; // Rethrow the error to handle it elsewhere if needed\n    }\n  };\n\n  const updateProfilePictureOnServer = async imageUrl => {\n    try {\n      const response = await fetch(\"/api/user/update_picture\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${user.token}` // Include the authorization header\n        },\n\n        body: JSON.stringify({\n          profilePictureUrl: imageUrl\n        }) // Change imageUrl to profilePictureUrl\n      });\n\n      if (!response.ok) {\n        console.error(`Failed to update profile picture. Status: ${response.status}`);\n        return;\n      }\n      const responseData = await response.json();\n      console.log(responseData.message); // Success message from the server\n    } catch (error) {\n      console.error(\"Error updating the profile picture on the server:\", error);\n      // Handle the error, e.g., show an error message\n    }\n  };\n\n  //get user profile picture from server\n\n  const fetchUserProfilePicture = async () => {\n    try {\n      const response = await fetch(\"/api/user/profile_picture\", {\n        method: \"GET\",\n        headers: {\n          \"Authorization\": `Bearer ${user.token}`\n        }\n      });\n      if (!response.ok) {\n        console.error(`Failed to fetch profile picture. Status: ${response.status}`);\n        return null;\n      }\n      const responseData = await response.json();\n      return responseData.profilePictureUrl;\n    } catch (error) {\n      console.error(\"Error fetching profile picture:\", error);\n      return null;\n    }\n  };\n  useEffect(() => {\n    // Fetch the user's profile picture URL when the component mounts\n    if (user) {\n      fetchUserProfilePicture().then(profilePictureUrl => {\n        if (profilePictureUrl) {\n          setUserSelectedImage(profilePictureUrl);\n        }\n      });\n    }\n  }, [user]); // Run this effect whenever the \"user\" changes\n\n  const handleSubmit = async () => {\n    if (icon) {\n      setImageUpload({\n        image: icon\n      }); // Update the image property\n      await ProfileUpload(icon);\n    }\n    setShowProfileEditor(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [showProfileEditor ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 28\n    }, this) : null, /*#__PURE__*/_jsxDEV(SideBarComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(RecipeSearchComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"Language-Select-Menu\",\n        value: i18n.language,\n        onChange: e => changeLanguage(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          className: \"English\",\n          value: \"en\",\n          children: \"E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          className: \"Spanish\",\n          value: \"es\",\n          children: \"ESP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-buttons-container display-f\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => setShowProfileEditor(true),\n          className: \"avatar\",\n          src: userSelectedImage || DefaultIcon,\n          alt: \"user-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-icon-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), showProfileEditor && /*#__PURE__*/_jsxDEV(ProfileEditor, {\n      userSelectedImage: userSelectedImage,\n      imageUpload: handleImg,\n      image: icon || imageUpload.image // Combine icon and imageUpload.image\n      ,\n      handleSubmit: handleSubmit,\n      setShowProfileEditor: setShowProfileEditor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n_s2(UserDashboardHome, \"gDzeLC+Lcwn+jjlYMDbwgzZeRyQ=\", false, function () {\n  return [useTranslation];\n});\n_c = UserDashboardHome;\nexport default UserDashboardHome;\nvar _c;\n$RefreshReg$(_c, \"UserDashboardHome\");","map":{"version":3,"names":["React","useState","useEffect","Outlet","SideBarComponent","RecipeSearchComponent","DefaultIcon","ProfileEditor","axios","UseAuthContext","useTranslation","changeLanguage","jsxDEV","_jsxDEV","UserDashboardHome","_s2","_s","$RefreshSig$","t","i18n","lng","navigator","language","LanguageSelector","user","showProfileEditor","setShowProfileEditor","userSelectedImage","setUserSelectedImage","icon","setIcon","imageUpload","setImageUpload","image","handleImg","e","target","files","console","log","ProfileUpload","file","formData","FormData","append","response","post","imageUrl","data","secure_url","updateProfilePictureOnServer","error","fetch","method","headers","token","body","JSON","stringify","profilePictureUrl","ok","status","responseData","json","message","fetchUserProfilePicture","then","handleSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/alect/Contacts/Desktop/recipe-app/frontend/src/pages/dashboard/userDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport SideBarComponent from \"../../components/SideBarComponent\";\r\nimport RecipeSearchComponent from \"../../components/RecipeSearchComponent\";\r\nimport DefaultIcon from \"../../images/default-profile-pic.jpg\";\r\nimport ProfileEditor from \"../../components/ProfileEditor\";\r\nimport axios from \"axios\";\r\nimport { UseAuthContext } from \"../../hooks/useAuthContext\"\r\n//translation imports\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { changeLanguage } from \"i18next\";\r\n\r\ninterface Ingredient {\r\n  name: string;\r\n  quantity: number;\r\n  unit: string;\r\n}\r\n\r\ninterface ImageUpload {\r\n  image: File | null;\r\n}\r\n\r\nfunction UserDashboardHome() {\r\n\r\n    //translation variable \r\n    const { t, i18n } = useTranslation();\r\n\r\n    useEffect(() => {\r\n  \r\n    const lng = navigator.language\r\n    i18n.changeLanguage(lng)\r\n  \r\n    }, [])\r\n  \r\n    function LanguageSelector() {\r\n      const { i18n } = useTranslation();\r\n    \r\n      const changeLanguage = (lng: any) => {\r\n        i18n.changeLanguage(lng);\r\n      };\r\n    }\r\n  \r\n\r\n\r\n  const {user} =UseAuthContext();\r\n  const [showProfileEditor, setShowProfileEditor] = useState(false);\r\n  const [userSelectedImage, setUserSelectedImage] = useState('');\r\n  const [icon, setIcon] = useState<File | null>(null);\r\n  const [imageUpload, setImageUpload] = useState<ImageUpload>({ image: null }); // Initialize with image property\r\n\r\n  const handleImg = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      setIcon(e.target.files[0]);\r\n    }\r\n  }\r\n\r\n\r\n  if (user) {\r\n    console.log(user, \"userr\")\r\n  }\r\n\r\n  //upload user image to cloudinary media gallery\r\n  const ProfileUpload = async (file: File) => {\r\n    const formData = new FormData();\r\n\r\n    //user file\r\n    formData.append('file', file);\r\n\r\n    //Where in cloudinary image will be stored\r\n    formData.append('upload_preset', 'RecipeAppUserPhotos');\r\n\r\n    try {\r\n      const response = await axios.post('https://api.cloudinary.com/v1_1/deewhii9n/image/upload', formData);\r\n      const imageUrl = response.data.secure_url;\r\n\r\n      // Handle imageUrl as needed, e.g., update userSelectedImage\r\n      setUserSelectedImage(imageUrl);\r\n\r\n      // Call the function to send the updated profile picture URL to the server\r\n      updateProfilePictureOnServer(imageUrl);\r\n\r\n      console.log(imageUrl);\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw error; // Rethrow the error to handle it elsewhere if needed\r\n    }\r\n  }\r\n  const updateProfilePictureOnServer = async (imageUrl: string) => {\r\n    try {\r\n      const response = await fetch(\"/api/user/update_picture\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": `Bearer ${user.token}`, // Include the authorization header\r\n        },\r\n        body: JSON.stringify({ profilePictureUrl: imageUrl }), // Change imageUrl to profilePictureUrl\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        console.error(`Failed to update profile picture. Status: ${response.status}`);\r\n        return;\r\n      }\r\n  \r\n      const responseData = await response.json();\r\n      console.log(responseData.message); // Success message from the server\r\n    } catch (error) {\r\n      console.error(\"Error updating the profile picture on the server:\", error);\r\n      // Handle the error, e.g., show an error message\r\n    }\r\n  };\r\n\r\n\r\n\r\n  //get user profile picture from server\r\n\r\n  const fetchUserProfilePicture = async () => {\r\n    try {\r\n      const response = await fetch(\"/api/user/profile_picture\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Authorization\": `Bearer ${user.token}`,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        console.error(`Failed to fetch profile picture. Status: ${response.status}`);\r\n        return null;\r\n      }\r\n\r\n      const responseData = await response.json();\r\n      return responseData.profilePictureUrl;\r\n    } catch (error) {\r\n      console.error(\"Error fetching profile picture:\", error);\r\n      return null;\r\n    }\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    // Fetch the user's profile picture URL when the component mounts\r\n    if (user) {\r\n      fetchUserProfilePicture().then(profilePictureUrl => {\r\n        if (profilePictureUrl) {\r\n          setUserSelectedImage(profilePictureUrl);\r\n        }\r\n      });\r\n    }\r\n  }, [user]); // Run this effect whenever the \"user\" changes\r\n  \r\n\r\n  const handleSubmit = async () => {\r\n    if (icon) {\r\n      setImageUpload({ image: icon }); // Update the image property\r\n      await ProfileUpload(icon);\r\n    }\r\n\r\n    setShowProfileEditor(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      {showProfileEditor ? <div className=\"dashboard-overlay\"></div> : null}\r\n\r\n      <SideBarComponent />\r\n      <header className=\"dashboard-header\">\r\n        <RecipeSearchComponent />\r\n        <select className=\"Language-Select-Menu\"\r\n          value={i18n.language}\r\n          onChange={(e) => changeLanguage(e.target.value)}\r\n        >\r\n          <option className=\"English\" value=\"en\">E</option>\r\n          <option className=\"Spanish\" value=\"es\">ESP</option>\r\n        </select>\r\n        <div className=\"dashboard-buttons-container display-f\">\r\n          <img\r\n            onClick={() => setShowProfileEditor(true)}\r\n            className=\"avatar\"\r\n            src={userSelectedImage || DefaultIcon}\r\n            alt=\"user-icon\"\r\n          />\r\n          <div className=\"notification-icon-container\"></div>\r\n        </div>\r\n      </header>\r\n      <Outlet />\r\n    \r\n      {showProfileEditor && <ProfileEditor\r\n  userSelectedImage={userSelectedImage}\r\n  imageUpload={handleImg}\r\n  image={icon || imageUpload.image} // Combine icon and imageUpload.image\r\n  handleSubmit={handleSubmit}\r\nsetShowProfileEditor={setShowProfileEditor}\r\n/>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserDashboardHome;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}