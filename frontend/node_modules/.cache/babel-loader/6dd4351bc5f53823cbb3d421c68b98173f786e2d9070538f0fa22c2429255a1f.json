{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alect\\\\Contacts\\\\Desktop\\\\recipe-app\\\\src\\\\components\\\\slider.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport Flicking from \"@egjs/react-flicking\";\nimport \"@egjs/react-flicking/dist/flicking.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Slider() {\n  _s();\n  const flickingRef = useRef(null);\n  useEffect(() => {\n    const checkScreenSize = () => {\n      if (window.innerWidth <= 800) {\n        var _flickingRef$current;\n        // Set panelsPerView to 1 for smaller screens\n        (_flickingRef$current = flickingRef.current) === null || _flickingRef$current === void 0 ? void 0 : _flickingRef$current.setPanelsPerView(1);\n\n        // Check if Flicking is initialized and call init() if necessary\n        if (flickingRef.current && !flickingRef.current.initialized) {\n          flickingRef.current.init();\n        }\n      } else {\n        var _flickingRef$current2;\n        // Set panelsPerView to 3 for larger screens\n        (_flickingRef$current2 = flickingRef.current) === null || _flickingRef$current2 === void 0 ? void 0 : _flickingRef$current2.setPanelsPerView(3);\n\n        // Check if Flicking is initialized and call destroy() if necessary\n        if (flickingRef.current && flickingRef.current.initialized) {\n          flickingRef.current.destroy();\n        }\n      }\n    };\n\n    // Initial check when the component mounts\n    checkScreenSize();\n\n    // Listen for window resize events and update panelsPerView accordingly\n    window.addEventListener(\"resize\", checkScreenSize);\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      window.removeEventListener(\"resize\", checkScreenSize);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slider\",\n    children: /*#__PURE__*/_jsxDEV(Flicking, {\n      ref: flickingRef,\n      autoResize: true,\n      useFractionalSize: true,\n      noPanelStyleOverride: true,\n      className: \"flicking-viewport\",\n      align: \"prev\",\n      circular: true,\n      autoInit: false,\n      bound: true,\n      circularFallback: \"bound\",\n      onMoveEnd: e => {\n        console.log(e);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u201CFlavourFinder ignited my culinary journey! Learning to cook online is a flavourful adventure.\\u201D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\\"FlavourFinder made me a kitchen pro. Their online cooking platform is practical and empowering!\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u201CFlavourFinder honed my kitchen techniques. Their digital cooking platform is efficient and engaging!\\u201D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Slider, \"fa3QLy6VfM33dnsY0mzpENW7w8s=\");\n_c = Slider;\nexport default Slider;\nvar _c;\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"names":["React","useEffect","useRef","Flicking","jsxDEV","_jsxDEV","Slider","_s","flickingRef","checkScreenSize","window","innerWidth","_flickingRef$current","current","setPanelsPerView","initialized","init","_flickingRef$current2","destroy","addEventListener","removeEventListener","className","children","ref","autoResize","useFractionalSize","noPanelStyleOverride","align","circular","autoInit","bound","circularFallback","onMoveEnd","e","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/alect/Contacts/Desktop/recipe-app/src/components/slider.tsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport Flicking from \"@egjs/react-flicking\";\r\nimport \"@egjs/react-flicking/dist/flicking.css\";\r\n\r\nfunction Slider() {\r\n  const flickingRef = useRef<Flicking | null>(null);\r\n\r\n  useEffect(() => {\r\n    const checkScreenSize = () => {\r\n      if (window.innerWidth <= 800) {\r\n        // Set panelsPerView to 1 for smaller screens\r\n        flickingRef.current?.setPanelsPerView(1);\r\n\r\n        // Check if Flicking is initialized and call init() if necessary\r\n        if (flickingRef.current && !flickingRef.current.initialized) {\r\n          flickingRef.current.init();\r\n        }\r\n      } else {\r\n        // Set panelsPerView to 3 for larger screens\r\n        flickingRef.current?.setPanelsPerView(3);\r\n\r\n        // Check if Flicking is initialized and call destroy() if necessary\r\n        if (flickingRef.current && flickingRef.current.initialized) {\r\n          flickingRef.current.destroy();\r\n        }\r\n      }\r\n    };\r\n\r\n    // Initial check when the component mounts\r\n    checkScreenSize();\r\n\r\n    // Listen for window resize events and update panelsPerView accordingly\r\n    window.addEventListener(\"resize\", checkScreenSize);\r\n\r\n    // Clean up the event listener when the component unmounts\r\n    return () => {\r\n      window.removeEventListener(\"resize\", checkScreenSize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"slider\">\r\n      <Flicking\r\n        ref={flickingRef}\r\n        autoResize={true}\r\n        useFractionalSize={true}\r\n        noPanelStyleOverride={true}\r\n        className=\"flicking-viewport\"\r\n        align=\"prev\"\r\n        circular={true}\r\n        autoInit={false}\r\n        bound={true}\r\n        circularFallback={\"bound\"}\r\n        onMoveEnd={(e) => {\r\n          console.log(e);\r\n        }}\r\n      >\r\n        <div className=\"panel\">\r\n          <p>\r\n            “FlavourFinder ignited my culinary journey! Learning to cook online\r\n            is a flavourful adventure.”\r\n          </p>\r\n        </div>\r\n        <div className=\"panel\">\r\n          <p>\r\n            \"FlavourFinder made me a kitchen pro. Their online cooking platform\r\n            is practical and empowering!\"\r\n          </p>\r\n        </div>\r\n        <div className=\"panel\">\r\n          <p>\r\n            “FlavourFinder honed my kitchen techniques. Their digital cooking\r\n            platform is efficient and engaging!”\r\n          </p>\r\n        </div>\r\n      </Flicking>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Slider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}