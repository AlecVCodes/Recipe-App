{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alect\\\\Contacts\\\\Desktop\\\\recipe-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from \"react-router-dom\";\nimport \"./index.css\";\nimport NavbarComponent from \"./components/navbar\";\nimport HomePage from \"./pages/homePage\";\nimport SignUpComponent from \"./pages/SignUp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const navigate = useNavigate();\n\n  // Function to determine if the Navbar should be shown based on the route\n  const shouldShowNavbar = () => {\n    return navigate().location.pathname !== \"/signup\";\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [shouldShowNavbar() && /*#__PURE__*/_jsxDEV(NavbarComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: /*#__PURE__*/_jsxDEV(SignUpComponent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","useNavigate","NavbarComponent","HomePage","SignUpComponent","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","navigate","shouldShowNavbar","location","pathname","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/alect/Contacts/Desktop/recipe-app/src/App.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  useNavigate,\n} from \"react-router-dom\";\nimport \"./index.css\";\nimport NavbarComponent from \"./components/navbar\";\nimport HomePage from \"./pages/homePage\";\nimport SignUpComponent from \"./pages/SignUp\";\n\nfunction App() {\n  const navigate = useNavigate();\n\n  // Function to determine if the Navbar should be shown based on the route\n  const shouldShowNavbar = () => {\n    return navigate().location.pathname !== \"/signup\";\n  };\n\n  return (\n    <Router>\n      <>\n        {shouldShowNavbar() && <NavbarComponent />}\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/signup\" element={<SignUpComponent />} />\n        </Routes>\n      </>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,aAAa,IAAIC,MAAM,EACvBC,KAAK,EACLC,MAAM,EACNC,WAAW,QACN,kBAAkB;AACzB,OAAO,aAAa;AACpB,OAAOC,eAAe,MAAM,qBAAqB;AACjD,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,eAAe,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMW,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,OAAOD,QAAQ,CAAC,CAAC,CAACE,QAAQ,CAACC,QAAQ,KAAK,SAAS;EACnD,CAAC;EAED,oBACER,OAAA,CAACR,MAAM;IAAAiB,QAAA,eACLT,OAAA,CAAAE,SAAA;MAAAO,QAAA,GACGH,gBAAgB,CAAC,CAAC,iBAAIN,OAAA,CAACJ,eAAe;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1Cb,OAAA,CAACN,MAAM;QAAAe,QAAA,gBACLT,OAAA,CAACP,KAAK;UAACqB,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEf,OAAA,CAACH,QAAQ;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzCb,OAAA,CAACP,KAAK;UAACqB,IAAI,EAAC,SAAS;UAACC,OAAO,eAAEf,OAAA,CAACF,eAAe;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC;IAAA,eACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEb;AAACT,EAAA,CAnBQD,GAAG;EAAA,QACOR,WAAW;AAAA;AAAAqB,EAAA,GADrBb,GAAG;AAqBZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}