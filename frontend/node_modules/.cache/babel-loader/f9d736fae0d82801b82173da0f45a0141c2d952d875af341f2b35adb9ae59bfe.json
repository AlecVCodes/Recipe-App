{"ast":null,"code":"var _s = $RefreshSig$();\nimport { UseAuthContext } from \"./useAuthContext\";\nimport { useState } from \"react\";\nexport const useLogin = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Context\n  const {\n    dispatch\n  } = UseAuthContext();\n  const login = async (email, password) => {\n    setIsLoading(false);\n    setError(null);\n    const data = {\n      email,\n      password\n    };\n    const response = await fetch(\"/api/user/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      const json = await response.json();\n      setIsLoading(false);\n      setError(json.error);\n      console.log(json.error, \"JSON ERROR\");\n      localStorage.removeItem(\"user\");\n      console.log(\"We  don't have a user\");\n    }\n    if (response.ok) {\n      console.log(\"We have a user\");\n      const json = await response.json();\n\n      // Store user data from the server response in local storage\n      localStorage.setItem(\"user\", JSON.stringify(json));\n\n      // Update auth context\n      dispatch({\n        type: \"LOGIN\",\n        payload: json\n      });\n\n      // Fetch the user's role from another endpoint\n      const roleResponse = await fetch(\"/api/user/role\", {\n        method: \"GET\",\n        headers: {\n          \"Authorization\": `Bearer ${json.token}`\n        }\n      });\n      if (roleResponse.ok) {\n        const roleData = await roleResponse.json();\n        console.log(roleData, \"role data\");\n        // Update user data with the role and store it in local storage\n        const userWithRole = {\n          ...json,\n          role: roleData.role\n        };\n        localStorage.setItem(\"user\", JSON.stringify(userWithRole));\n        dispatch({\n          type: \"LOGIN\",\n          payload: userWithRole\n        });\n      }\n      setIsLoading(false);\n    }\n  };\n  return {\n    login,\n    isLoading,\n    error\n  };\n};\n_s(useLogin, \"TdgXzm3bV5WOR6TSvW/vB2ctGng=\");","map":{"version":3,"names":["UseAuthContext","useState","useLogin","_s","error","setError","isLoading","setIsLoading","dispatch","login","email","password","data","response","fetch","method","headers","body","JSON","stringify","ok","json","console","log","localStorage","removeItem","setItem","type","payload","roleResponse","token","roleData","userWithRole","role"],"sources":["C:/Users/alect/Contacts/Desktop/recipe-app/frontend/src/hooks/useLoginHook.tsx"],"sourcesContent":["import { UseAuthContext } from \"./useAuthContext\";\r\nimport { useState } from \"react\";\r\n\r\nexport const useLogin = () => {\r\n  const [error, setError] = useState<any>(null);\r\n  const [isLoading, setIsLoading] = useState<any>(false);\r\n\r\n  // Context\r\n  const { dispatch } = UseAuthContext();\r\n\r\n  const login = async (email: any, password: any) => {\r\n    setIsLoading(false);\r\n    setError(null);\r\n\r\n    const data = { email, password };\r\n\r\n    const response = await fetch(\"/api/user/login\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const json = await response.json();\r\n      setIsLoading(false);\r\n      setError(json.error);\r\n      console.log(json.error, \"JSON ERROR\");\r\n      localStorage.removeItem(\"user\")\r\n      console.log(\"We  don't have a user\")\r\n    }\r\n\r\n    if (response.ok) {\r\n      console.log(\"We have a user\")\r\n      const json = await response.json();\r\n      \r\n      // Store user data from the server response in local storage\r\n      localStorage.setItem(\"user\", JSON.stringify(json));\r\n\r\n      // Update auth context\r\n      dispatch({ type: \"LOGIN\", payload: json });\r\n\r\n      // Fetch the user's role from another endpoint\r\n      const roleResponse = await fetch(\"/api/user/role\", {\r\n        method: \"GET\",\r\n        headers: { \"Authorization\": `Bearer ${json.token}` },\r\n      });\r\n\r\n      if (roleResponse.ok) {\r\n        const roleData = await roleResponse.json();\r\n        console.log(roleData, \"role data\")\r\n        // Update user data with the role and store it in local storage\r\n        const userWithRole = { ...json, role: roleData.role };\r\n        localStorage.setItem(\"user\", JSON.stringify(userWithRole));\r\n        dispatch({ type: \"LOGIN\", payload: userWithRole });\r\n      }\r\n\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return { login, isLoading, error };\r\n};\r\n"],"mappings":";AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAEhC,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAM,IAAI,CAAC;EAC7C,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAM,KAAK,CAAC;;EAEtD;EACA,MAAM;IAAEO;EAAS,CAAC,GAAGR,cAAc,CAAC,CAAC;EAErC,MAAMS,KAAK,GAAG,MAAAA,CAAOC,KAAU,EAAEC,QAAa,KAAK;IACjDJ,YAAY,CAAC,KAAK,CAAC;IACnBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMO,IAAI,GAAG;MAAEF,KAAK;MAAEC;IAAS,CAAC;IAEhC,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;MAC9CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;IAC3B,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCd,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACgB,IAAI,CAACjB,KAAK,CAAC;MACpBkB,OAAO,CAACC,GAAG,CAACF,IAAI,CAACjB,KAAK,EAAE,YAAY,CAAC;MACrCoB,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;MAC/BH,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACtC;IAEA,IAAIV,QAAQ,CAACO,EAAE,EAAE;MACfE,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC7B,MAAMF,IAAI,GAAG,MAAMR,QAAQ,CAACQ,IAAI,CAAC,CAAC;;MAElC;MACAG,YAAY,CAACE,OAAO,CAAC,MAAM,EAAER,IAAI,CAACC,SAAS,CAACE,IAAI,CAAC,CAAC;;MAElD;MACAb,QAAQ,CAAC;QAAEmB,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEP;MAAK,CAAC,CAAC;;MAE1C;MACA,MAAMQ,YAAY,GAAG,MAAMf,KAAK,CAAC,gBAAgB,EAAE;QACjDC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UAAE,eAAe,EAAG,UAASK,IAAI,CAACS,KAAM;QAAE;MACrD,CAAC,CAAC;MAEF,IAAID,YAAY,CAACT,EAAE,EAAE;QACnB,MAAMW,QAAQ,GAAG,MAAMF,YAAY,CAACR,IAAI,CAAC,CAAC;QAC1CC,OAAO,CAACC,GAAG,CAACQ,QAAQ,EAAE,WAAW,CAAC;QAClC;QACA,MAAMC,YAAY,GAAG;UAAE,GAAGX,IAAI;UAAEY,IAAI,EAAEF,QAAQ,CAACE;QAAK,CAAC;QACrDT,YAAY,CAACE,OAAO,CAAC,MAAM,EAAER,IAAI,CAACC,SAAS,CAACa,YAAY,CAAC,CAAC;QAC1DxB,QAAQ,CAAC;UAAEmB,IAAI,EAAE,OAAO;UAAEC,OAAO,EAAEI;QAAa,CAAC,CAAC;MACpD;MAEAzB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,OAAO;IAAEE,KAAK;IAAEH,SAAS;IAAEF;EAAM,CAAC;AACpC,CAAC;AAACD,EAAA,CA1DWD,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}