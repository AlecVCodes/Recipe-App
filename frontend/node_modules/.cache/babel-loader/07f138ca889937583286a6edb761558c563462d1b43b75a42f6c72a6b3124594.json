{"ast":null,"code":"var _s = $RefreshSig$();\nimport { UseAuthContext } from \"./useAuthContext\";\nimport { useState } from \"react\";\nexport const useLogin = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isloading, setisLoading] = useState(null);\n\n  //context\n  const {\n    dispatch\n  } = UseAuthContext();\n  const Login = async (email, password) => {\n    setisLoading(true);\n    setError(null);\n    const response = await fetch(\"/api/user/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setisLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      //save user to local storage using jwt\n\n      localStorage.setItem(\"user\", JSON.stringify(json));\n\n      //update auth context\n      dispatch({\n        type: \"LOGIN\",\n        payload: json\n      });\n      setisLoading(false);\n    }\n  };\n  return {\n    Login,\n    isloading,\n    error\n  };\n};\n_s(useLogin, \"KuNSWoQTHMC7hLo0cHuDFiHlBTI=\");","map":{"version":3,"names":["UseAuthContext","useState","useLogin","_s","error","setError","isloading","setisLoading","dispatch","Login","email","password","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload"],"sources":["C:/Users/alect/Contacts/Desktop/recipe-app/frontend/src/hooks/useLoginHook.tsx"],"sourcesContent":["import { UseAuthContext } from \"./useAuthContext\";\r\nimport { useState } from \"react\";\r\n\r\nexport const useLogin = () => {\r\n  const [error, setError] = useState<any>(null);\r\n  const [isloading, setisLoading] = useState<any>(null);\r\n\r\n  //context\r\n  const { dispatch } = UseAuthContext();\r\n\r\n  const Login = async (email: any, password: any) => {\r\n    setisLoading(true);\r\n    setError(null);\r\n\r\n    const response = await fetch(\"/api/user/login\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n\r\n    const json = await response.json();\r\n\r\n    if (!response.ok) {\r\n      setisLoading(false);\r\n      setError(json.error);\r\n    }\r\n\r\n    if (response.ok) {\r\n      //save user to local storage using jwt\r\n\r\n      localStorage.setItem(\"user\", JSON.stringify(json));\r\n\r\n      //update auth context\r\n      dispatch({ type: \"LOGIN\", payload: json });\r\n\r\n      setisLoading(false);\r\n    }\r\n  };\r\n\r\n  return { Login, isloading, error };\r\n};\r\n"],"mappings":";AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAEhC,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAM,IAAI,CAAC;EAC7C,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAM,IAAI,CAAC;;EAErD;EACA,MAAM;IAAEO;EAAS,CAAC,GAAGR,cAAc,CAAC,CAAC;EAErC,MAAMS,KAAK,GAAG,MAAAA,CAAOC,KAAU,EAAEC,QAAa,KAAK;IACjDJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;MAC9CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MAChBb,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACc,IAAI,CAACf,KAAK,CAAC;IACtB;IAEA,IAAIQ,QAAQ,CAACQ,EAAE,EAAE;MACf;;MAEAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;;MAElD;MACAX,QAAQ,CAAC;QAAEe,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEL;MAAK,CAAC,CAAC;MAE1CZ,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,OAAO;IAAEE,KAAK;IAAEH,SAAS;IAAEF;EAAM,CAAC;AACpC,CAAC;AAACD,EAAA,CArCWD,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}