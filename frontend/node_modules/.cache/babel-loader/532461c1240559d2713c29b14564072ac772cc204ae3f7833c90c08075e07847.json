{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alect\\\\Contacts\\\\Desktop\\\\recipe-app\\\\frontend\\\\src\\\\components\\\\HomeRecipes.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomeRecipes() {\n  _s();\n  const [recipes, setRecipes] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const timeoutRef = useRef(null);\n  useEffect(() => {\n    const fetchRecipes = async () => {\n      try {\n        const response = await fetch(\"/api/recipes\");\n        if (!response.ok) {\n          console.error(`Failed to fetch recipes. Status: ${response.status}`);\n          return;\n        }\n        const json = await response.json();\n        setRecipes(json);\n        console.log(json);\n      } catch (error) {\n        console.error(\"Error during fetch:\", error);\n      }\n    };\n    if (state) {\n      fetchRecipes();\n    }\n  }, []);\n  useEffect(() => {\n    console.log(\"Success:\", success);\n  }, [success]);\n  useEffect(() => {\n    console.log(\"Error:\", error);\n\n    // Clear the timeout if a new error message is set\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    // Set a new timeout to reset the error message after 800 milliseconds\n    if (error !== \"\") {\n      timeoutRef.current = window.setTimeout(() => {\n        setError(\"\");\n      }, 800);\n    }\n  }, [error]);\n  const saveUserRecipes = async recipeId => {\n    try {\n      const response = await fetch(`/api/recipes/${recipeId}`);\n      if (!response.ok) {\n        console.error(`Failed to fetch recipe with ID ${recipeId}. Status: ${response.status}`);\n        return;\n      }\n      const savedRecipe = await response.json();\n      const postResponse = await fetch(\"/api/userRecipes\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(savedRecipe)\n      });\n      if (!postResponse.ok) {\n        setError(\"Recipe already saved\");\n        console.error(\"Failed to post recipe to UserRecipes schema.\");\n      } else {\n        setSuccess(\"Recipe saved successfully\"); // Set success message\n        console.log(\"Recipe saved successfully:\", savedRecipe);\n\n        // Reset success message after 800 milliseconds (0.8 seconds)\n        timeoutRef.current = window.setTimeout(() => {\n          setSuccess(\"\");\n          setError(\"\");\n        }, 800);\n      }\n    } catch (error) {\n      console.error(\"Error during fetch:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipes\",\n    children: [recipes && recipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: recipe.img,\n        alt: \"food-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: recipe.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save-recipe-btn\",\n        onClick: () => saveUserRecipes(recipe._id),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)]\n    }, recipe._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: error !== \"\" ? \"error-message\" : \"\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: success !== \"\" ? \"success-message\" : \"\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(HomeRecipes, \"LfO3ItdSskP1zOeuOtCzWKsaFmU=\");\n_c = HomeRecipes;\nexport default HomeRecipes;\nvar _c;\n$RefreshReg$(_c, \"HomeRecipes\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","HomeRecipes","_s","recipes","setRecipes","error","setError","success","setSuccess","timeoutRef","fetchRecipes","response","fetch","ok","console","status","json","log","state","current","clearTimeout","window","setTimeout","saveUserRecipes","recipeId","savedRecipe","postResponse","method","headers","body","JSON","stringify","className","children","map","recipe","src","img","alt","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","_id","_c","$RefreshReg$"],"sources":["C:/Users/alect/Contacts/Desktop/recipe-app/frontend/src/components/HomeRecipes.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { UseAuthContext } from \"../hooks/useAuthContext\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\ninterface Ingredient {\r\n  name: string;\r\n  quantity: number;\r\n  unit: string;\r\n}\r\n\r\nexport interface Recipe {\r\n  img: string;\r\n  _id: string;\r\n  title: string;\r\n  ingredients: Ingredient[];\r\n}\r\n\r\nfunction HomeRecipes() {\r\n  const [recipes, setRecipes] = useState<Recipe[] | null>(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const timeoutRef = useRef<number | null>(null);\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchRecipes = async () => {\r\n      try {\r\n        const response = await fetch(\"/api/recipes\");\r\n        if (!response.ok) {\r\n          console.error(`Failed to fetch recipes. Status: ${response.status}`);\r\n          return;\r\n        }\r\n        const json = await response.json();\r\n        setRecipes(json);\r\n        console.log(json);\r\n      } catch (error) {\r\n        console.error(\"Error during fetch:\", error);\r\n      }\r\n    };\r\n    if (state) {\r\n      fetchRecipes();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Success:\", success);\r\n  }, [success]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Error:\", error);\r\n\r\n    // Clear the timeout if a new error message is set\r\n    if (timeoutRef.current) {\r\n      clearTimeout(timeoutRef.current);\r\n    }\r\n\r\n    // Set a new timeout to reset the error message after 800 milliseconds\r\n    if (error !== \"\") {\r\n      timeoutRef.current = window.setTimeout(() => {\r\n        setError(\"\");\r\n      }, 800);\r\n    }\r\n  }, [error]);\r\n\r\n  const saveUserRecipes = async (recipeId: string) => {\r\n    try {\r\n      const response = await fetch(`/api/recipes/${recipeId}`);\r\n      if (!response.ok) {\r\n        console.error(\r\n          `Failed to fetch recipe with ID ${recipeId}. Status: ${response.status}`\r\n        );\r\n        return;\r\n      }\r\n      const savedRecipe = await response.json();\r\n\r\n      const postResponse = await fetch(\"/api/userRecipes\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(savedRecipe),\r\n      });\r\n\r\n      if (!postResponse.ok) {\r\n        setError(\"Recipe already saved\");\r\n        console.error(\"Failed to post recipe to UserRecipes schema.\");\r\n      } else {\r\n        setSuccess(\"Recipe saved successfully\"); // Set success message\r\n        console.log(\"Recipe saved successfully:\", savedRecipe);\r\n\r\n        // Reset success message after 800 milliseconds (0.8 seconds)\r\n        timeoutRef.current = window.setTimeout(() => {\r\n          setSuccess(\"\");\r\n          setError(\"\");\r\n        }, 800);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during fetch:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"recipes\">\r\n      {recipes &&\r\n        recipes.map((recipe) => (\r\n          <div key={recipe._id}>\r\n            <img src={recipe.img} alt=\"food-img\"></img>\r\n            <p>{recipe.title}</p>\r\n            <button\r\n              className=\"save-recipe-btn\"\r\n              onClick={() => saveUserRecipes(recipe._id)}\r\n            >\r\n              Save\r\n            </button>\r\n          </div>\r\n        ))}\r\n      <span className={error !== \"\" ? \"error-message\" : \"\"}>{error}</span>\r\n      <span className={success !== \"\" ? \"success-message\" : \"\"}>{success}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeRecipes;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}