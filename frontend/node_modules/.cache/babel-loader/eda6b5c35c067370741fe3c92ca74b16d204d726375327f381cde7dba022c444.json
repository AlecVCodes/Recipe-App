{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alect\\\\Contacts\\\\Desktop\\\\recipe-app\\\\src\\\\components\\\\slider.tsx\";\nimport React from \"react\";\n// Import Swiper React components\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n\n// Import Swiper styles\nimport \"swiper/css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Slider() {\n  // const flickingRef = useRef<Flicking | null>(null);\n\n  // useEffect(() => {\n  //   const checkScreenSize = () => {\n  //     if (window.innerWidth <= 800) {\n  //       flickingRef.current?.init();\n  //     } else {\n  //       flickingRef.current?.destroy();\n  //     }\n  //   };\n\n  //   // Initial check when the component mounts\n  //   checkScreenSize();\n\n  //   // Listen for window resize events and update Flicking accordingly\n  //   window.addEventListener(\"resize\", checkScreenSize);\n\n  //   // Clean up the event listener when the component unmounts\n  //   return () => {\n  //     window.removeEventListener(\"resize\", checkScreenSize);\n  //   };\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slider\",\n    children: /*#__PURE__*/_jsxDEV(Swiper, {\n      spaceBetween: 50,\n      slidesPerView: 3,\n      onSlideChange: () => console.log(\"slide change\"),\n      onSwiper: swiper => console.log(swiper),\n      children: [/*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: \"Slide 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: \"Slide 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: \"Slide 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: \"Slide 4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_c = Slider;\nexport default Slider;\nvar _c;\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"names":["React","Swiper","SwiperSlide","jsxDEV","_jsxDEV","Slider","className","children","spaceBetween","slidesPerView","onSlideChange","console","log","onSwiper","swiper","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/alect/Contacts/Desktop/recipe-app/src/components/slider.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport TestimonialCircleOneLarge from \"../images/testimonial-circle-1-large.png\";\r\nimport TestimonialCircleTwoLarge from \"../images/testimonial-circle-2-large.png\";\r\nimport TestimonialCircleThreeLarge from \"../images/testimonial-circle-3-large.png\";\r\n\r\n// Import Swiper React components\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n\r\n// Import Swiper styles\r\nimport \"swiper/css\";\r\n\r\nfunction Slider() {\r\n  // const flickingRef = useRef<Flicking | null>(null);\r\n\r\n  // useEffect(() => {\r\n  //   const checkScreenSize = () => {\r\n  //     if (window.innerWidth <= 800) {\r\n  //       flickingRef.current?.init();\r\n  //     } else {\r\n  //       flickingRef.current?.destroy();\r\n  //     }\r\n  //   };\r\n\r\n  //   // Initial check when the component mounts\r\n  //   checkScreenSize();\r\n\r\n  //   // Listen for window resize events and update Flicking accordingly\r\n  //   window.addEventListener(\"resize\", checkScreenSize);\r\n\r\n  //   // Clean up the event listener when the component unmounts\r\n  //   return () => {\r\n  //     window.removeEventListener(\"resize\", checkScreenSize);\r\n  //   };\r\n  // }, []);\r\n\r\n  return (\r\n    <div className=\"slider\">\r\n      <Swiper\r\n        spaceBetween={50}\r\n        slidesPerView={3}\r\n        onSlideChange={() => console.log(\"slide change\")}\r\n        onSwiper={(swiper) => console.log(swiper)}\r\n      >\r\n        <SwiperSlide>Slide 1</SwiperSlide>\r\n        <SwiperSlide>Slide 2</SwiperSlide>\r\n        <SwiperSlide>Slide 3</SwiperSlide>\r\n        <SwiperSlide>Slide 4</SwiperSlide>\r\n        {/* ... */}\r\n      </Swiper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Slider;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAqB,OAAO;AAKxC;AACA,SAASC,MAAM,EAAEC,WAAW,QAAQ,cAAc;;AAElD;AACA,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,MAAMA,CAAA,EAAG;EAChB;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,oBACED,OAAA;IAAKE,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACrBH,OAAA,CAACH,MAAM;MACLO,YAAY,EAAE,EAAG;MACjBC,aAAa,EAAE,CAAE;MACjBC,aAAa,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAE;MACjDC,QAAQ,EAAGC,MAAM,IAAKH,OAAO,CAACC,GAAG,CAACE,MAAM,CAAE;MAAAP,QAAA,gBAE1CH,OAAA,CAACF,WAAW;QAAAK,QAAA,EAAC;MAAO;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAClCd,OAAA,CAACF,WAAW;QAAAK,QAAA,EAAC;MAAO;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAClCd,OAAA,CAACF,WAAW;QAAAK,QAAA,EAAC;MAAO;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAClCd,OAAA,CAACF,WAAW;QAAAK,QAAA,EAAC;MAAO;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACC,EAAA,GAxCQd,MAAM;AA0Cf,eAAeA,MAAM;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}