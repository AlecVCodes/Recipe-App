{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alect\\\\Contacts\\\\Desktop\\\\recipe-app\\\\frontend\\\\src\\\\pages\\\\dashboard\\\\AdminComponent.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminComponent() {\n  const uploadImage = async files => {\n    if (!files) {\n      return;\n    }\n    console.log(files[0]);\n    const formData = new FormData();\n    formData.append(\"file\", files[0]);\n    formData.append(\"upload_preset\", \"RecipeAppUserPhotos\");\n    try {\n      const response = await fetch(\"https://api.cloudinary.com/v1_1/deewhii9n/image/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        const uploadedImage = await response.json();\n\n        // Handle the successful response data as needed\n        const imageUrl = uploadedImage.secure_url;\n        console.log(\"Image uploaded successfully. URL:\", imageUrl);\n\n        // Now you can use imageUrl as needed in your application\n      } else {\n        // Handle the error, e.g., throw an exception or log it\n        console.error(`Failed to upload image. Status: ${response.status}`);\n      }\n    } catch (error) {\n      // Handle other errors, e.g., network issues\n      console.error(\"Error uploading image:\", error);\n    }\n  };\n  const handleFileChange = event => {\n    uploadImage(event.target.files);\n  };\n\n  //function form when the form is submitted\n\n  const handleSubmit = async e => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create New Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Create Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_c = AdminComponent;\nexport default AdminComponent;\nvar _c;\n$RefreshReg$(_c, \"AdminComponent\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","AdminComponent","uploadImage","files","console","log","formData","FormData","append","response","fetch","method","body","ok","uploadedImage","json","imageUrl","secure_url","error","status","handleFileChange","event","target","handleSubmit","e","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/alect/Contacts/Desktop/recipe-app/frontend/src/pages/dashboard/AdminComponent.tsx"],"sourcesContent":["import React, { ChangeEvent } from 'react';\r\n\r\nfunction AdminComponent() {\r\n\r\n  const uploadImage = async (files: FileList | null) => {\r\n    if (!files) {\r\n      return;\r\n    }\r\n\r\n    console.log(files[0]);\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", files[0]);\r\n    formData.append(\"upload_preset\", \"RecipeAppUserPhotos\");\r\n\r\n    try {\r\n      const response = await fetch(\"https://api.cloudinary.com/v1_1/deewhii9n/image/upload\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        const uploadedImage = await response.json();\r\n        \r\n        // Handle the successful response data as needed\r\n        const imageUrl = uploadedImage.secure_url;\r\n        console.log(\"Image uploaded successfully. URL:\", imageUrl);\r\n\r\n        // Now you can use imageUrl as needed in your application\r\n      } else {\r\n        // Handle the error, e.g., throw an exception or log it\r\n        console.error(`Failed to upload image. Status: ${response.status}`);\r\n      }\r\n    } catch (error) {\r\n      // Handle other errors, e.g., network issues\r\n      console.error(\"Error uploading image:\", error);\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    uploadImage(event.target.files);\r\n  };\r\n\r\n\r\n\r\n  //function form when the form is submitted\r\n\r\n  const handleSubmit =  async (e: React.FormEvent<SubmitEvent>) => {\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <h2>Create New Recipe</h2>\r\n        <input type='file' onChange={handleFileChange}></input>\r\n        <button>Create Recipe</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminComponent;\r\n "],"mappings":";AAAA,OAAOA,KAAK,MAAuB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,cAAcA,CAAA,EAAG;EAExB,MAAMC,WAAW,GAAG,MAAOC,KAAsB,IAAK;IACpD,IAAI,CAACA,KAAK,EAAE;MACV;IACF;IAEAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC;IAErB,MAAMG,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEL,KAAK,CAAC,CAAC,CAAC,CAAC;IACjCG,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAE,qBAAqB,CAAC;IAEvD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wDAAwD,EAAE;QACrFC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACI,EAAE,EAAE;QACf,MAAMC,aAAa,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;;QAE3C;QACA,MAAMC,QAAQ,GAAGF,aAAa,CAACG,UAAU;QACzCb,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEW,QAAQ,CAAC;;QAE1D;MACF,CAAC,MAAM;QACL;QACAZ,OAAO,CAACc,KAAK,CAAE,mCAAkCT,QAAQ,CAACU,MAAO,EAAC,CAAC;MACrE;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACd;MACAd,OAAO,CAACc,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAME,gBAAgB,GAAIC,KAAoC,IAAK;IACjEnB,WAAW,CAACmB,KAAK,CAACC,MAAM,CAACnB,KAAK,CAAC;EACjC,CAAC;;EAID;;EAEA,MAAMoB,YAAY,GAAI,MAAOC,CAA+B,IAAK,CAEjE,CAAC;EAID,oBACExB,OAAA;IAAAyB,QAAA,eACEzB,OAAA;MAAM0B,QAAQ,EAAEH,YAAa;MAAAE,QAAA,gBAC3BzB,OAAA;QAAAyB,QAAA,EAAI;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1B9B,OAAA;QAAO+B,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAEZ;MAAiB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACvD9B,OAAA;QAAAyB,QAAA,EAAQ;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACG,EAAA,GA5DQhC,cAAc;AA8DvB,eAAeA,cAAc;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}