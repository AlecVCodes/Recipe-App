{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alect\\\\Contacts\\\\Desktop\\\\recipe-app\\\\frontend\\\\src\\\\pages\\\\IndividualRecipe.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { UseAuthContext } from '../hooks/useAuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IndividualRecipe() {\n  _s();\n  const {\n    user\n  } = UseAuthContext();\n  const {\n    id\n  } = useParams(); // Make the 'id' parameter optional\n  const [recipe, setRecipe] = useState(null);\n  useEffect(() => {\n    // Fetch the recipe data based on the 'id' parameter\n    const fetchRecipeData = async () => {\n      if (id) {\n        try {\n          const response = await fetch(`/api/recipes/${id}`, {\n            headers: {\n              Authorization: `Bearer ${user.token}`\n            }\n          }); // Adjust the API endpoint to match your backend\n          if (response.ok) {\n            const data = await response.json();\n            setRecipe(data);\n          } else {\n            // Handle error when the recipe is not found\n          }\n        } catch (error) {\n          // Handle any fetch errors\n        }\n      }\n    };\n    fetchRecipeData();\n  }, [id]);\n  useEffect(() => {\n    console.log(recipe, 'recipe');\n  });\n  if (!recipe) {\n    // Render a loading indicator or an error message here\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: recipe.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [recipe.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [ingredient.name, \": \", ingredient.quantity, \" \", ingredient.unit]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: recipe.img,\n        alt: recipe.img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(IndividualRecipe, \"vhqYlKMVMk7iyccv5XRmuzj31V0=\", false, function () {\n  return [useParams];\n});\n_c = IndividualRecipe;\nexport default IndividualRecipe;\nvar _c;\n$RefreshReg$(_c, \"IndividualRecipe\");","map":{"version":3,"names":["React","useEffect","useState","useParams","UseAuthContext","jsxDEV","_jsxDEV","IndividualRecipe","_s","user","id","recipe","setRecipe","fetchRecipeData","response","fetch","headers","Authorization","token","ok","data","json","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","title","ingredients","map","ingredient","index","name","quantity","unit","src","img","alt","_c","$RefreshReg$"],"sources":["C:/Users/alect/Contacts/Desktop/recipe-app/frontend/src/pages/IndividualRecipe.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { UseAuthContext } from '../hooks/useAuthContext';\r\nimport { Recipe } from '../components/HomeRecipes';\r\n\r\nfunction IndividualRecipe() {\r\n  const { user } = UseAuthContext();\r\n  const { id } = useParams<{ id?: string }>(); // Make the 'id' parameter optional\r\n  const [recipe, setRecipe] = useState<Recipe | null>(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch the recipe data based on the 'id' parameter\r\n    const fetchRecipeData = async () => {\r\n      if (id) {\r\n        try {\r\n          const response = await fetch(`/api/recipes/${id}`, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n          }); // Adjust the API endpoint to match your backend\r\n          if (response.ok) {\r\n            const data: Recipe = await response.json();\r\n            setRecipe(data);\r\n     \r\n          } else {\r\n            // Handle error when the recipe is not found\r\n          }\r\n        } catch (error) {\r\n          // Handle any fetch errors\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchRecipeData();\r\n  }, [id]);\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(recipe, 'recipe')\r\n  })\r\n  if (!recipe) {\r\n    // Render a loading indicator or an error message here\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>{recipe.title}</h1>\r\n      <ul>\r\n        {recipe.ingredients.map((ingredient, index) => (\r\n          <li key={index}>\r\n            {ingredient.name}: {ingredient.quantity} {ingredient.unit}\r\n          </li>\r\n        ))}\r\n        <img src={recipe.img} alt={recipe.img}></img>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IndividualRecipe;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,cAAc,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzD,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAK,CAAC,GAAGL,cAAc,CAAC,CAAC;EACjC,MAAM;IAAEM;EAAG,CAAC,GAAGP,SAAS,CAAkB,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC;EAEzDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAIH,EAAE,EAAE;QACN,IAAI;UACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAE,gBAAeL,EAAG,EAAC,EAAE;YACjDM,OAAO,EAAE;cAAEC,aAAa,EAAG,UAASR,IAAI,CAACS,KAAM;YAAE;UACnD,CAAC,CAAC,CAAC,CAAC;UACJ,IAAIJ,QAAQ,CAACK,EAAE,EAAE;YACf,MAAMC,IAAY,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;YAC1CT,SAAS,CAACQ,IAAI,CAAC;UAEjB,CAAC,MAAM;YACL;UAAA;QAEJ,CAAC,CAAC,OAAOE,KAAK,EAAE;UACd;QAAA;MAEJ;IACF,CAAC;IAEDT,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACH,EAAE,CAAC,CAAC;EAGRT,SAAS,CAAC,MAAM;IACdsB,OAAO,CAACC,GAAG,CAACb,MAAM,EAAE,QAAQ,CAAC;EAC/B,CAAC,CAAC;EACF,IAAI,CAACA,MAAM,EAAE;IACX;IACA,oBAAOL,OAAA;MAAAmB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACEvB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAKd,MAAM,CAACmB;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBvB,OAAA;MAAAmB,QAAA,GACGd,MAAM,CAACoB,WAAW,CAACC,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,kBACxC5B,OAAA;QAAAmB,QAAA,GACGQ,UAAU,CAACE,IAAI,EAAC,IAAE,EAACF,UAAU,CAACG,QAAQ,EAAC,GAAC,EAACH,UAAU,CAACI,IAAI;MAAA,GADlDH,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL,CAAC,eACFvB,OAAA;QAAKgC,GAAG,EAAE3B,MAAM,CAAC4B,GAAI;QAACC,GAAG,EAAE7B,MAAM,CAAC4B;MAAI;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACrB,EAAA,CAnDQD,gBAAgB;EAAA,QAERJ,SAAS;AAAA;AAAAsC,EAAA,GAFjBlC,gBAAgB;AAqDzB,eAAeA,gBAAgB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}