{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alect\\\\Contacts\\\\Desktop\\\\recipe-app\\\\frontend\\\\src\\\\pages\\\\IndividualRecipe.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IndividualRecipe() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [recipe, setRecipe] = useState(null);\n\n  // Load data from local storage if available\n  useEffect(() => {\n    const storedRecipeData = localStorage.getItem(`recipe_${id}`);\n    if (storedRecipeData) {\n      setRecipe(JSON.parse(storedRecipeData));\n    }\n  }, [id]);\n  useEffect(() => {\n    if (id) {\n      const fetchRecipeData = async () => {\n        try {\n          const response = await fetch(`/api/recipes/${id}`);\n          if (response.ok) {\n            const data = await response.json();\n            setRecipe(data);\n\n            // Store the recipe data in local storage\n            localStorage.setItem(`recipe_${id}`, JSON.stringify(data));\n          } else {\n            // Handle error when the recipe is not found\n          }\n        } catch (error) {\n          // Handle any fetch errors\n        }\n      };\n      fetchRecipeData();\n    }\n    return () => {\n      // Remove the recipe data from local storage when leaving the page\n      localStorage.removeItem(`recipe_${id}`);\n    };\n  }, [id]);\n  if (!recipe) {\n    // Render a loading indicator or an error message here\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: recipe.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [recipe.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [ingredient.name, \": \", ingredient.quantity, \" \", ingredient.unit]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: recipe.img,\n        alt: recipe.img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(IndividualRecipe, \"vhqYlKMVMk7iyccv5XRmuzj31V0=\", false, function () {\n  return [useParams];\n});\n_c = IndividualRecipe;\nexport default IndividualRecipe;\nvar _c;\n$RefreshReg$(_c, \"IndividualRecipe\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","IndividualRecipe","_s","id","recipe","setRecipe","storedRecipeData","localStorage","getItem","JSON","parse","fetchRecipeData","response","fetch","ok","data","json","setItem","stringify","error","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","title","ingredients","map","ingredient","index","name","quantity","unit","src","img","alt","_c","$RefreshReg$"],"sources":["C:/Users/alect/Contacts/Desktop/recipe-app/frontend/src/pages/IndividualRecipe.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Recipe } from '../components/HomeRecipes';\r\n\r\nfunction IndividualRecipe() {\r\n  const { id } = useParams<{ id?: string }>();\r\n  const [recipe, setRecipe] = useState<Recipe | null>(null);\r\n\r\n  // Load data from local storage if available\r\n  useEffect(() => {\r\n    const storedRecipeData = localStorage.getItem(`recipe_${id}`);\r\n    if (storedRecipeData) {\r\n      setRecipe(JSON.parse(storedRecipeData));\r\n    }\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      const fetchRecipeData = async () => {\r\n        try {\r\n          const response = await fetch(`/api/recipes/${id}`);\r\n          if (response.ok) {\r\n            const data: Recipe = await response.json();\r\n            setRecipe(data);\r\n\r\n            // Store the recipe data in local storage\r\n            localStorage.setItem(`recipe_${id}`, JSON.stringify(data));\r\n          } else {\r\n            // Handle error when the recipe is not found\r\n          }\r\n        } catch (error) {\r\n          // Handle any fetch errors\r\n        }\r\n      };\r\n\r\n      fetchRecipeData();\r\n    }\r\n\r\n    return () => {\r\n      // Remove the recipe data from local storage when leaving the page\r\n      localStorage.removeItem(`recipe_${id}`);\r\n    };\r\n  }, [id]);\r\n\r\n  if (!recipe) {\r\n    // Render a loading indicator or an error message here\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>{recipe.title}</h1>\r\n      <ul>\r\n        {recipe.ingredients.map((ingredient, index) => (\r\n          <li key={index}>\r\n            {ingredient.name}: {ingredient.quantity} {ingredient.unit}\r\n          </li>\r\n        ))}\r\n        <img src={recipe.img} alt={recipe.img} />\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IndividualRecipe;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}