{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alect\\\\Contacts\\\\Desktop\\\\recipe-app\\\\frontend\\\\src\\\\pages\\\\dashboard\\\\userDashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport SideBarComponent from \"../../components/SideBarComponent\";\nimport RecipeSearchComponent from \"../../components/RecipeSearchComponent\";\nimport DefaultIcon from \"../../images/default-profile-pic.jpg\";\nimport ProfileEditor from \"../../components/ProfileEditor\";\nimport axios from \"axios\";\nimport { UseAuthContext } from \"../../hooks/useAuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserDashboardHome() {\n  _s();\n  const {\n    user\n  } = UseAuthContext();\n  const [showProfileEditor, setShowProfileEditor] = useState(false);\n  const [userSelectedImage, setUserSelectedImage] = useState('');\n  const [icon, setIcon] = useState(null);\n  const [imageUpload, setImageUpload] = useState({\n    image: null\n  }); // Initialize with image property\n\n  const handleImg = e => {\n    if (e.target.files && e.target.files[0]) {\n      setIcon(e.target.files[0]);\n    }\n  };\n  if (user) {\n    console.log(user, \"userr\");\n  }\n  const ProfileUpload = async file => {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('upload_preset', 'RecipeAppUserPhotos');\n    try {\n      const response = await axios.post('https://api.cloudinary.com/v1_1/deewhii9n/image/upload', formData);\n      const imageUrl = response.data.secure_url;\n\n      // Handle imageUrl as needed, e.g., update userSelectedImage\n      setUserSelectedImage(imageUrl);\n\n      // Call the function to send the updated profile picture URL to the server\n      updateProfilePictureOnServer(imageUrl);\n      console.log(imageUrl);\n    } catch (error) {\n      console.error(error);\n      throw error; // Rethrow the error to handle it elsewhere if needed\n    }\n  };\n\n  const updateProfilePictureOnServer = async imageUrl => {\n    try {\n      const response = await fetch(\"/api/user/update_picture\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${user.token}` // Include the authorization header\n        },\n\n        body: JSON.stringify({\n          profilePictureUrl: imageUrl\n        }) // Change imageUrl to profilePictureUrl\n      });\n\n      if (!response.ok) {\n        console.error(`Failed to update profile picture. Status: ${response.status}`);\n        return;\n      }\n      const responseData = await response.json();\n      console.log(responseData.message); // Success message from the server\n    } catch (error) {\n      console.error(\"Error updating the profile picture on the server:\", error);\n      // Handle the error, e.g., show an error message\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (icon) {\n      setImageUpload({\n        image: icon\n      }); // Update the image property\n      await ProfileUpload(icon);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [showProfileEditor ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 28\n    }, this) : null, /*#__PURE__*/_jsxDEV(SideBarComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(RecipeSearchComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-buttons-container display-f\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => setShowProfileEditor(true),\n          className: \"avatar\",\n          src: userSelectedImage || DefaultIcon,\n          alt: \"user-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-icon-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), showProfileEditor && /*#__PURE__*/_jsxDEV(ProfileEditor, {\n      imageUpload: handleImg,\n      image: imageUpload.image,\n      handleSubmit: handleSubmit,\n      showProfileEditor: showProfileEditor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(UserDashboardHome, \"LYlXU/h6icIWs0G52HHRQSFiaXw=\");\n_c = UserDashboardHome;\nexport default UserDashboardHome;\nvar _c;\n$RefreshReg$(_c, \"UserDashboardHome\");","map":{"version":3,"names":["React","useState","Outlet","SideBarComponent","RecipeSearchComponent","DefaultIcon","ProfileEditor","axios","UseAuthContext","jsxDEV","_jsxDEV","UserDashboardHome","_s","user","showProfileEditor","setShowProfileEditor","userSelectedImage","setUserSelectedImage","icon","setIcon","imageUpload","setImageUpload","image","handleImg","e","target","files","console","log","ProfileUpload","file","formData","FormData","append","response","post","imageUrl","data","secure_url","updateProfilePictureOnServer","error","fetch","method","headers","token","body","JSON","stringify","profilePictureUrl","ok","status","responseData","json","message","handleSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/alect/Contacts/Desktop/recipe-app/frontend/src/pages/dashboard/userDashboard.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport SideBarComponent from \"../../components/SideBarComponent\";\r\nimport RecipeSearchComponent from \"../../components/RecipeSearchComponent\";\r\nimport DefaultIcon from \"../../images/default-profile-pic.jpg\";\r\nimport ProfileEditor from \"../../components/ProfileEditor\";\r\nimport axios from \"axios\";\r\nimport { UseAuthContext } from \"../../hooks/useAuthContext\"\r\ninterface Ingredient {\r\n  name: string;\r\n  quantity: number;\r\n  unit: string;\r\n}\r\n\r\ninterface ImageUpload {\r\n  image: File | null;\r\n}\r\n\r\nfunction UserDashboardHome() {\r\n\r\n\r\n  const {user} =UseAuthContext();\r\n  const [showProfileEditor, setShowProfileEditor] = useState(false);\r\n  const [userSelectedImage, setUserSelectedImage] = useState('');\r\n  const [icon, setIcon] = useState<File | null>(null);\r\n  const [imageUpload, setImageUpload] = useState<ImageUpload>({ image: null }); // Initialize with image property\r\n\r\n  const handleImg = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      setIcon(e.target.files[0]);\r\n    }\r\n  }\r\n\r\n\r\n  if (user) {\r\n    console.log(user, \"userr\")\r\n  }\r\n  const ProfileUpload = async (file: File) => {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('upload_preset', 'RecipeAppUserPhotos');\r\n\r\n    try {\r\n      const response = await axios.post('https://api.cloudinary.com/v1_1/deewhii9n/image/upload', formData);\r\n      const imageUrl = response.data.secure_url;\r\n\r\n      // Handle imageUrl as needed, e.g., update userSelectedImage\r\n      setUserSelectedImage(imageUrl);\r\n\r\n      // Call the function to send the updated profile picture URL to the server\r\n      updateProfilePictureOnServer(imageUrl);\r\n\r\n      console.log(imageUrl);\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw error; // Rethrow the error to handle it elsewhere if needed\r\n    }\r\n  }\r\n  const updateProfilePictureOnServer = async (imageUrl: string) => {\r\n    try {\r\n      const response = await fetch(\"/api/user/update_picture\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": `Bearer ${user.token}`, // Include the authorization header\r\n        },\r\n        body: JSON.stringify({ profilePictureUrl: imageUrl }), // Change imageUrl to profilePictureUrl\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        console.error(`Failed to update profile picture. Status: ${response.status}`);\r\n        return;\r\n      }\r\n  \r\n      const responseData = await response.json();\r\n      console.log(responseData.message); // Success message from the server\r\n    } catch (error) {\r\n      console.error(\"Error updating the profile picture on the server:\", error);\r\n      // Handle the error, e.g., show an error message\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  const handleSubmit = async () => {\r\n    if (icon) {\r\n      setImageUpload({ image: icon }); // Update the image property\r\n      await ProfileUpload(icon);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      {showProfileEditor ? <div className=\"dashboard-overlay\"></div> : null}\r\n\r\n      <SideBarComponent />\r\n      <header className=\"dashboard-header\">\r\n        <RecipeSearchComponent />\r\n        <div className=\"dashboard-buttons-container display-f\">\r\n          <img\r\n            onClick={() => setShowProfileEditor(true)}\r\n            className=\"avatar\"\r\n            src={userSelectedImage || DefaultIcon}\r\n            alt=\"user-icon\"\r\n          />\r\n          <div className=\"notification-icon-container\"></div>\r\n        </div>\r\n      </header>\r\n      <Outlet />\r\n      {showProfileEditor && <ProfileEditor imageUpload={handleImg} image={imageUpload.image} handleSubmit={handleSubmit} showProfileEditor={showProfileEditor} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserDashboardHome;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}